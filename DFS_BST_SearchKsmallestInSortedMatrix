//BST-DFS Search k-smallest element in sorted Matrix
M = [[1,2,3],[4,5,6],[7,8,9]]
n=3     
k=8
m=0
L = M[0][0]
H = M[n-1][n-1]
while (L<H) {
  m = Math.floor((L+H)/2)
  if (find_number_element_smaller_than_mid(m) < k) {L = m+1}
  else {H=m-1}
}
function find_number_element_smaller_than_mid(mid){
  count = 0
  M.forEach(A => A.forEach(e => {if (e<=mid) count++}))
  return count
}
console.log(m)
